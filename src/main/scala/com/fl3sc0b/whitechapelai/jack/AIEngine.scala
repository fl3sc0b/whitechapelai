package com.fl3sc0b.whitechapelai.jack

import com.fl3sc0b.whitechapelai.maths.Random

/** Utilities to model the behaviour of the CPU player - Jack */
object AIEngine {

  /**  Ordered list of possible hideouts for Jack. Generated by [[HideoutAnalyzer]] class using these weights:
   *   - Min distance from red box: 0.6
   *   - Standard deviation of distance from red boxes: 0.2
   *   - Number of connections with circle boxes: 0.2
   */
  val hideoutsOrdered: List[(Short, Double)] = List((179,0.19399818399213078), (71,0.19820745846427285), (70,0.20057228937820543), (189,0.20938279937674617),
    (165,0.22618932825937524), (167,0.22618932825937524), (177,0.22618932825937524), (191,0.23765715034737778),
    (178,0.2723431744132214), (95,0.32067094011874375), (81,0.327923211059997), (87,0.34032901192149756),
    (115,0.3415086868063146), (88,0.35927856391813184), (104,0.3672955583786077), (38,0.381836420381833),
    (194,0.38520730420715094), (176,0.38946167259845854), (105,0.3900477946873626), (76,0.39820745846427286),
    (107,0.4102682677400785), (72,0.4109515807739816), (103,0.4144080920658093), (69,0.41503386806924014),
    (14,0.41658615559779827), (32,0.41658615559779827), (190,0.4180972133936978), (96,0.4184317637293915),
    (91,0.4223289078602248), (89,0.42407811217304237), (36,0.4279902665356792), (74,0.4289766892335036),
    (61,0.4296499846256323), (39,0.4297927074504247), (92,0.4377135232448402), (181,0.4408563971241622),
    (169,0.4458030988384709), (33,0.4486272071432106), (166,0.44865607277323016), (154,0.4532156709557817),
    (168,0.4532156709557817), (75,0.4563066134655631), (153,0.45695855902860605), (119,0.45752441522630627),
    (121,0.45752441522630627), (43,0.4634624083920279), (37,0.4668083189735716), (180,0.4686002863403971),
    (90,0.4716912288501785), (8,0.4809122369177926), (34,0.4900009850303546), (35,0.4900009850303546),
    (6,0.4966180589537086), (7,0.4966180589537086), (60,0.49845027831862493), (161,0.49845027831862493),
    (152,0.49936951710962785), (1,0.5061743157357401), (25,0.509616254545874), (54,0.512368605454929),
    (10,0.5134740211356396), (77,0.5175302817236409), (24,0.5250008699304894), (130,0.5286297905332636),
    (112,0.5303046459819649), (137,0.5303046459819649), (97,0.5346836988891934), (175,0.5352948723707902),
    (188,0.5352948723707902), (160,0.5385911828809276), (109,0.5399449335801538), (110,0.5399449335801538),
    (78,0.5440144059178791), (59,0.5446041244724711), (22,0.5591002613882554), (131,0.5593990213024944),
    (108,0.5596278672894857), (132,0.5596278672894857), (113,0.5610738767511957), (114,0.5610738767511957),
    (50,0.5620647184808771), (135,0.562447509380911), (148,0.562447509380911), (49,0.5686415386936184),
    (64,0.5686415386936184), (19,0.5711912941761494), (80,0.5722779175755452), (129,0.5739594017159648),
    (53,0.5774493338654926), (192,0.5779242660191961), (13,0.5814487185246363), (117,0.5819498116524574),
    (145,0.5840261540782339), (128,0.5858169248285676), (93,0.5882787645681707), (94,0.5882787645681707),
    (187,0.5914609099737757), (195,0.5914609099737757), (31,0.5932092729302774), (62,0.5936642185248173),
    (106,0.59642407508234), (12,0.5968333339092518), (173,0.6001296444193891), (144,0.6024733609893644),
    (150,0.604846287983074), (18,0.6052541075421016), (17,0.605432410071978), (182,0.6068879195781471),
    (184,0.608693496788427), (116,0.6127190424216882), (57,0.6144080920658094), (30,0.6190479953374015),
    (52,0.623978503699508), (15,0.6356155187523047), (16,0.6356155187523047), (186,0.6394627275576577),
    (193,0.6394627275576577), (151,0.6510001341369201), (102,0.6530417657319932), (146,0.6564042543141565),
    (58,0.656958559028606), (98,0.6571054269278278), (120,0.6571054269278278), (2,0.6615384615384615),
    (111,0.6655276215331771), (56,0.6708511667446668), (162,0.6713697141513675), (73,0.6723431744132213),
    (23,0.6763338463859261), (141,0.6765723296077016), (9,0.676923076923077), (4,0.6788470237766433),
    (127,0.683810996501224), (156,0.683810996501224), (101,0.6839849017250126), (126,0.6839849017250126),
    (45,0.6911884461640938), (47,0.6911884461640938), (11,0.6942316391612586), (133,0.6966180589537085),
    (134,0.6966180589537085), (118,0.701170093873015), (155,0.7073415603769324), (67,0.7146366001679171),
    (124,0.7227261757615477), (55,0.7230769230769232), (68,0.7230769230769232), (46,0.7250008699304894),
    (51,0.7300212155525325), (79,0.7361573859978192), (5,0.7374812729294258), (28,0.73984820285707),
    (82,0.7419280679487774), (44,0.7441433905120618), (63,0.7454058309371479), (66,0.7466801030962618),
    (122,0.7485487048164698), (123,0.7485487048164698), (163,0.750143389831369), (164,0.750143389831369),
    (174,0.750143389831369), (140,0.7534954065307786), (170,0.7534954065307786), (20,0.7557136273061129),
    (157,0.7573126833333929), (171,0.7573126833333929), (172,0.7620647184808772), (48,0.765452929658424),
    (29,0.7753733552417018), (125,0.7793179355857007), (83,0.7853155001500798), (26,0.7889257512614009),
    (136,0.7962972359852151), (138,0.7962972359852151), (99,0.8019605249453801), (40,0.8052541075421016),
    (41,0.8052541075421016), (142,0.8101527673117168), (42,0.8206387229267169), (139,0.8252225894159485),
    (85,0.8313415201474361), (183,0.8342357602564698), (143,0.854847342942273), (185,0.8650049910257005),
    (86,0.8686002863403971), (159,0.8837686022814679), (100,0.9455233632634741))

  /**
   * Gets a new hideout for Jack
   * @return Number that represent Jack's next hideout
   */
  def chooseHideout(): Short = hideoutsOrdered.reverse(Random.orderedProbabilityUniformlyDistributed(hideoutsOrdered.length))._1
}
